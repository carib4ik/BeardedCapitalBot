using MailKit.Net.Smtp;
using MailKit.Security;
using MimeKit;

namespace BeardedCapitalBot.Services;

public class EmailService
{
    private readonly string _fromEmail;
    private readonly string _fromPassword;

    public EmailService(string fromEmail, string fromPassword)
    {
        _fromEmail = fromEmail;
        _fromPassword = fromPassword;
    }

    public async Task SendFileToEmailAsync(string toEmail, string subject, string body, string filePath)
    {
        var message = new MimeMessage();
        message.From.Add(new MailboxAddress("Boroda Capital", _fromEmail));
        message.To.Add(new MailboxAddress("", toEmail));
        message.Subject = subject;

        var builder = new BodyBuilder
        {
            TextBody = body
        };

        if (File.Exists(filePath))
        {
            builder.Attachments.Add(filePath);
        }
        else
        {
            Console.WriteLine("‚ö† –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏");
            return;
        }

        message.Body = builder.ToMessageBody();

        using var client = new SmtpClient();

        try
        {
            Console.WriteLine("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SMTP-—Å–µ—Ä–≤–µ—Ä—É...");
            await client.ConnectAsync("smtp.gmail.com", 587, SecureSocketOptions.StartTls);

            Console.WriteLine("üîë –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è...");
            await client.AuthenticateAsync(_fromEmail, _fromPassword);

            Console.WriteLine("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞...");
            await client.SendAsync(message);

            Console.WriteLine("‚úÖ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");

            await client.DisconnectAsync(true);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {ex.Message}");
            throw;
        }
    }
}